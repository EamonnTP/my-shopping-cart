# logging.level.com.lightstep.tracer=DEBUG


# Workaround exception when using H2 embedded database
#
# Caused by: java.lang.IllegalAccessError:
# class org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy$$EnhancerBySpringCGLIB$$73f8abd3
# cannot access its superclass
# org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy
#
# See io.opentracing.contrib.spring.cloud.jdbc.JdbcAutoConfiguration
opentracing.spring.cloud.jdbc.enabled=false

# app.datasource.jdbcUrl=jdbc:tracing:h2:mem:ecommercedb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false;MODE=PostgreSQL
# app.datasource.username=sa
# app.datasource.password=

# app.datasource.driverClassName=io.opentracing.contrib.jdbc.TracingDriver
# spring.jpa.show-sql=true

database=postgresql
spring.datasource.url=jdbc:tracing:postgresql://localhost:5432/test
spring.datasource.username=test
spring.datasource.password=test
spring.datasource.driverClassName=io.opentracing.contrib.jdbc.TracingDriver
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG

# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
# none: does nothing with the schema, makes no changes to the database
spring.jpa.hibernate.ddl-auto=update

antiFraudService.baseUrl=http://localhost:8081


